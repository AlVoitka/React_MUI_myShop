https://code.mu/ru/javascript/manual/array/map/


Метод map() позволяет взять исходный массив и изменить каждый елемент внутри него, 
и на выходе получить новый массив с измененными данными. Или перзаписать старый массив.


Имею массив ответов от пользователя с неправильно прописанными именами:

const answers = ['saHA', 'ToliK'];

назначаю метод на массив:

const result = answers.map();

и задаю функцию внутри метода:

const result = answers.map(item => {
    return item.toLowerCase();            ---- перевести все в нижний регистр
});


Как перезаписать старый массив: но лучше не практиковать
let answers = ['saHA', 'ToliK'];

const answers = answers.map(item => {
    return item.toLowerCase();            
});


///////////////////     Метод map  //////////////////////////

Метод map позволяет применить заданную функцию для каждого элемента массива. 
При этом метод не изменяет исходный массив, а возвращает измененный.

Метод в параметре получает функцию, которая выполнится для каждого элемента массива. 
То, что вернет эта функция через return для элемента массива, станет новым значением этого элемента (см. примеры).

В функцию можно передавать 3 параметра.

Если эти параметры есть (они не обязательны), то в первый автоматически попадет элемент массива, 
во второй попадет его номер в массиве (индекс), а в третий - сам массив.


Синтаксис

let новый массив = массив.map(function(элемент, индекс, массив) {
	код
	return измененный элемент;
})



Пример 
Создадим массив, каждый элемент которого вдвое больше соответствующего элемента начального массива:

let arr = [1, 2, 3, 4, 5];

let result = arr.map(function(elem) {
	return elem * 2;
});

console.log(result); // [2, 4, 5, 8, 10]



Пример 
Создадим массив, каждый элемент которого получается так - значение элемента умножается на его порядковый номер в массиве:

let arr = [1, 2, 3, 4, 5];

let result = arr.map(function(elem, index) {
	return elem * index;
});

console.log(result); // [0, 2, 6, 12, 20]
Результат выполнения кода (первый элемент: 1*0, второй: 2*1, третий: 3*2, четвертый: 4*3, пятый: 5*4):



Пример 
При необходимости в третий параметр можно передать сам массив:

let arr = [1, 2, 3, 4, 5];

let result = arr.map(function(elem, index, arr) {
	тут будет доступен массив arr
});