https://www.udemy.com/course/javascript_full/learn/lecture/19598634#questions
https://www.youtube.com/watch?v=4X7OjIjjaQE



Объект Promise используется для отложенных и асинхронных операций.
Как правило асинхронный код присутствует в timeOut, когда функция вызывается через определенное время или промежутки времени,
либо при запросах на сервер, когда не известно через сколько ответит сервер и опреация идет асинхронно.

Promise - дословно обещания. последовательность действий: если произошло что то, то обещаю что выполнится следующее действие.
Пример:
делаю запрос на сервер и толко после получения ответа выполняется следующее действие по обработке этого ответа.

1.
создается промис при помощи конструктора и помещаю его в переменную:

const req = new Promise();

2.
Во внутрь промиса помещается kолбэк функция принимающая 2 аргумета:

const req = new Promise(function(resolve, reject){});

resolve, reject - это встроенные функции

resolve - обещание выполнилость, что то выполнилост правильно, так как и ожидалось
reject -  обещание не выполнилось и что то пошло не так

3.
----
Для того чтобы обработать положительный результат используется метод .then() или cath() или finnaly() - это все встроенные методы в промис
которые ожидают принять некое значение либо resolve либо reject
---
req.then(()=> {console.log}) - метод выполняется на промисе в случае положительного исхода тоесть внутрь себя принемает аргумет 
                                                                                                                    с функцией resolve
----
когда промис завершился неудачей ( сервер вернул ошибку и тд), для обработки этих результатов 
используется метод .cath()

req.cath(() => {console.log('Error')})  -- этот действие выполнится при ошибке и примет в себя reject

----
 метод, который вызывается при абсолютно любоим исходе промиса :

req.finnaly(() => {console.log()})  -- действия которые должны быть исполнены всегда! вне зависимости от исхода.!


Разъяснение:

Отправляю данные с формы по запросу ajax, мне возвращается объект промис с обещание что сервер либо примял эти данные либо нет,
соответственно я это промис обрабатываю методами:

если все ок - то then() - к примеру показываю мадолку или обрабатываю пришедшие данные

если что то пошло нет так ошибка, то срабатывает блок кода  - cath()  - тоже вывожу модалку с ошибкой

и остается finnaly() - а сюда помещается участок кода по очистке формы 


4.
Еще есть Promise.all и Promise.race
